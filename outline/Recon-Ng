# Recon-Ng Synopsis
* Recon-ng is an open-source reconnaissance framework that automates the process of gathering information about a target domain, such as IP addresses, subdomains, email addresses, social media accounts, and more. Recon-ng is designed to simplify and speed up the reconnaissance process by integrating with other tools and data sources and providing a modular, extensible architecture that allows users to customize and extend its functionality.

* Recon-ng was developed by Tim Tomes, who also created the popular open-source web application security testing tool, "The Harvester". The first version of Recon-ng was released in 2013, and it has since become a widely used tool in the information security community.

* Recon-ng is an active open-source project, and its codebase is available on GitHub. The last version of Recon-ng was released on January 6, 2022, and the project is regularly updated with bug fixes, new features, and support for additional data sources and modules.

* For more detailed documentation, users can visit the Recon-ng GitHub page, which includes installation instructions, usage examples, and information on the tool's architecture and module system. Additionally, the Recon-ng community maintains a wiki with documentation, tutorials, and frequently asked questions.

## Setup
* To use Recon-ng, you need to download and install it on your local system. Recon-ng can be installed on Linux and Mac operating systems, and the installation process involves downloading the source code from the Recon-ng GitHub repository and running a few command-line commands.

* Once installed, you can use Recon-ng by launching it from the command line and running its modules to gather information about a target domain. Recon-ng modules are divided into several categories, including discovery, reconnaissance, reporting, and exploitation, and each module can be customized with various parameters to refine its output.

* Recon-ng is an open-source tool and does not require any license to use it. It is free to use, modify, and distribute, subject to the terms of the MIT License under which it is released.

* As an open-source tool, Recon-ng does not have an academic license specifically. However, academic institutions are free to use the tool under the terms of the MIT License. Additionally, some academic programs may provide instruction or guidance on using Recon-ng as part of their coursework or research projects.

## Input
* To use Recon-ng, you need to provide it with a target domain or organization for which you want to gather information. This can be done by specifying a domain name or IP address as the input parameter when running Recon-ng from the command line.

* Recon-ng can accept input in various forms, including a single domain or IP address, a list of domains or IP addresses, or a file containing a list of targets.

* Recon-ng can also accept input related to an organization, such as the name of the organization or its email addresses or social media accounts. Recon-ng modules can then use this input to discover additional information about the organization, such as its employees, partners, and technology stack.

* Some interesting command-line switches or special search criteria in Recon-ng include the ability to filter or limit the scope of its search results based on various factors, such as a specific domain, IP range, or email address domain.

* Recon-ng also provides an API that can be accessed programmatically to automate the reconnaissance process or integrate it with other tools. The Recon-ng API supports various programming languages, including Python and Ruby, and allows users to write custom modules and automate their reconnaissance workflows.

## Output Summary
* The output from Recon-ng is a collection of information and data related to the target domain or organization that has been analyzed. The output can include information such as IP addresses, subdomains, email addresses, social media accounts, employee names and titles, phone numbers, software and technology used by the target, and more.

* The output is provided in a structured format that can be easily parsed and analyzed. Recon-ng modules generate output in various formats, including CSV, HTML, JSON, and XML, among others. The output can be saved to a file or displayed on the screen, depending on the module configuration. Recon-ng also includes reporting modules that allow users to generate professional-looking reports based on their reconnaissance results. These reports can be customized with logos, headers, and footers, and can be generated in various formats, including PDF and HTML. The reporting modules provide a convenient way to summarize and share reconnaissance findings with clients or team members.

## Output Mapping to STIX 2.1
* The output generated by Recon-ng can be mapped to several schema fields in STIX 2.1, which is a standard language for representing cyber threat intelligence. Here are some examples of how Recon-ng output can be mapped to STIX 2.1 schema fields:

    * IP addresses: Recon-ng can identify and gather IP addresses associated with a target domain or organization. These IP addresses can be mapped to the "IPv4 Address" or "IPv6 Address" objects in STIX 2.1, depending on the IP address version.

    * Domains: Recon-ng can discover and enumerate subdomains associated with a target domain. These subdomains can be mapped to the "Domain Name" object in STIX 2.1.

    * Email addresses: Recon-ng can extract email addresses associated with a target domain or organization. These email addresses can be mapped to the "Email Address" object in STIX 2.1.

    * Social media accounts: Recon-ng can identify social media accounts associated with a target domain or organization. These accounts can be mapped to the "Social Media Account" object in STIX 2.1.

    * Software and technology: Recon-ng can enumerate the software and technology used by a target domain or organization. This information can be mapped to the "Tool" or "Malware" objects in STIX 2.1, depending on the context.

* To map Recon-ng output to STIX 2.1 schema fields, users need to convert the output into STIX 2.1 objects and properties using a tool or library that supports the STIX 2.1 format, such as the Python STIX2 library. By doing so, users can easily integrate their reconnaissance findings with other cyber threat intelligence sources and share the information in a standardized format.

## Example
Provide an example use of the tool through text or screenshots. If it's possible to provide an organization as input, use UA Little Rock as the organization. 